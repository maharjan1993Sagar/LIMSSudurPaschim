@inject IWebHelper webHelper
@inject IWorkContext workContext
@inject IPermissionService permissionService
@inject CommonSettings commonSettings
@inject CustomerSettings customerSettings
@inject LocalizationSettings localizationSettings
@inject AdminAreaSettings adminAreaSettings
@inject LIMS.Core.Configuration.LIMSConfig LIMSConfig
@inject IPageHeadBuilder pagebuilder

@using System.Text.Encodings.Web
@using LIMS.Domain.Customers
@using LIMS.Framework.UI;
@using LIMS.Core;
@using LIMS.Domain.Localization
@using LIMS.Services.Security;
@using LIMS.Domain.Common;
@{
    var currentCustomer = workContext.CurrentCustomer;
    var usernamesEnabled = customerSettings.UsernamesEnabled;
    var currentVersion = LIMS.Core.LIMSVersion.FullVersion;
    var kendoVersion = "2019.2.514";
    var supportRtl = workContext.WorkingLanguage.Rtl &&
        !localizationSettings.IgnoreRtlPropertyForAdminArea;

    //CSS
    if (supportRtl)
    {
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, string.Format("~/content/kendo/{0}/kendo.rtl.min.css", kendoVersion), excludeFromBundle: true);
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/build/css/custom-rtl.css", excludeFromBundle: true);
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/bootstrap/css/bootstrap-rtl.min.css", excludeFromBundle: true);
    }
    else
    {
        pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/build/css/custom.css", excludeFromBundle: true);
    }
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/build/css/site-common.css", excludeFromBundle: true);

    pagebuilder.AppendCssFileParts(ResourceLocation.Head, string.Format("~/content/kendo/{0}/kendo.common-material.min.css", kendoVersion), excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, $"~/content/kendo/{kendoVersion}/kendo.material.min.css", excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, $"~/content/kendo/{kendoVersion}/kendo.material.mobile.min.css", excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/content/jquery-ui-themes/smoothness/jquery-ui-1.10.3.custom.min.css", excludeFromBundle: true);
    pagebuilder.AddScriptParts(location: ResourceLocation.Footer, src: "~/content/tinymce/tinymce.min.js", excludeFromBundle: true);

    //administration

    pagebuilder.AppendScriptParts(location: ResourceLocation.Footer, src: "~/administration/build/js/custom.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(location: ResourceLocation.Footer, src: "~/administration/build/js/smartresize.js", excludeFromBundle: true);

    //vendors

    pagebuilder.AppendScriptParts(location: ResourceLocation.Footer, src: "~/administration/bootstrap/js/bootstrap.min.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(location: ResourceLocation.Footer, src: "~/administration/bootstrap/js/popper.min.js", excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/bootstrap/css/bootstrap.min.css", excludeFromBundle: true);


    //js
    //available list of culture https://github.com/telerik/kendo-ui-core/tree/master/src/cultures
    pagebuilder.AppendScriptParts(ResourceLocation.Head, string.Format("~/scripts/kendo/{0}/cultures/kendo.culture.{1}.min.js", kendoVersion, "en-US"), excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, string.Format("~/scripts/kendo/{0}/kendo.grid.js", kendoVersion), excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, string.Format("~/scripts/kendo/{0}/kendo.ui.core.min.js", kendoVersion), excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/admin.common.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/jquery-ui-1.12.1.custom/jquery-ui.min.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/jquery.validate.unobtrusive.min.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/jquery.validate.min.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/admin.search.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/scripts/typeahead.js", excludeFromBundle: true);

    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/simple-line-icons/simple-line-icons.min.css", excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/build/css/font-awesome.min.css", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/administration/bootstrap/js/daterangepicker.min.js", excludeFromBundle: true);
    pagebuilder.AppendCssFileParts(ResourceLocation.Head, "~/administration/bootstrap/css/daterangepicker.min.css", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/administration/build/js/moment.min.js", excludeFromBundle: true);
    pagebuilder.AppendScriptParts(ResourceLocation.Head, "~/administration/build/js/jquery.min.js", excludeFromBundle: true);

    //page title
    string adminPageTitle = "";
    if (!String.IsNullOrWhiteSpace(ViewBag.Title))
    {
        adminPageTitle = ViewBag.Title + " / ";
    }
    adminPageTitle += T("Admin.PageTitle").Text;

    //has "Manage Maintenance" permission?
    var canManageMaintenance = await permissionService.Authorize(StandardPermissionProvider.ManageMaintenance);

}
<!DOCTYPE html>
<html @if (supportRtl) { <text> dir="rtl" </text> } onloadstart="myFunction()">
<head>
    <title>@adminPageTitle</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <head-custom>
    <css-files asp-location="Head" bundle-files="false">
    <script-files asp-location="Head" bundle-files="false">
</head>
<body>
    @Html.AntiForgeryToken()
    <script>
        if (document.readyState == "loading") {
            let value = localStorage.getItem("sideBarCookie");
            if (value == "true") {
                $('body').removeClass('nav-md');
                $('body').addClass('nav-sm');
                $(".site_title").css("padding-left", "26px");
                if ($('body').hasClass('nav-sm')) {
                    $('#sidebar-menu').find('li.active').addClass('active-sm').removeClass('active');
                    $('#sidebar-menu').find('li.active-sm ul').hide();
                }
            }
            else {
                $('body').removeClass('nav-sm');
                $('body').addClass('nav-md');
                $(".site_title").css("padding-left", "0px");
                $('#sidebar-menu').find('li.active-sm').addClass('active').removeClass('active-sm');
                $('#sidebar-menu').find('li.active > ul').show();
            }
        }

    </script>
    <style>
        .k-grid .k-grid-header .k-header {
            padding: .929em 1.286em;
            font-weight: 500;
            white-space: normal;
            text-align: center!important;
        }
   @@media(min-width: 1100px)
    {
        #menu_toggle {
            display: none;
        }
        .column {
            float: left;
           
            padding: 5px;
        }
    }
    </style>
    <div class="container body">
        <div class="main_container">
         
            <vc:admin-widget widget-zone="admin_header_before" additional-data="null" />
            @if (IsSectionDefined("statusbar"))
            {
                @RenderSection("statusbar")
            }
            @if (IsSectionDefined("header"))
            {
                @RenderSection("header")
            }
            else
            {
                <vc:admin-widget widget-zone="header_before" additional-data="null" />
                <div class="top_nav">
                    <div class="nav_menu">
                        <nav>


                            <div class="nav toggle">
                                <a id="menu_toggle">
                                    <span></span>
                                    <span></span>
                                    <span></span>
                                </a>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="column">
                                        <div>
                                            <a href="~/Admin"><img src="~/administration/build/images/LIMSLogo.png" width="90px" height="90px" /></a>
                                        </div>
                                    </div>
                                    <div class="column">
                                        <div style="float:left; margin-top:10px;">
                                            Governmernt of Nepal<br />
                                            @if (!String.IsNullOrEmpty(currentCustomer.OrgName))
                                            {
                                                <b>  @(currentCustomer.OrgName)</b>
                                            }
                                            <br />
                                            @if (!String.IsNullOrEmpty(currentCustomer.OrgAddress))
                                            {
                                                @(currentCustomer.OrgAddress)
                                            }
                                        </div>
                                    </div>
                                </div>

                                @*<vc:admin-widget widget-zone="header_toggle_after" additional-data="null" />*@
                                <div class="col-md-5 text-center">
                                    <h2>@T("Software.Name") (LIMS)</h2>
                                    <h5>Developed and supported by NLSIP</h5>
                                </div>
                                <div class="col-md-3">
                                    <ul class="nav navbar-nav navbar-right">
                                        <li>
                                            <a href="javascript:;" class="user-profile dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                <img src="~/administration/build/images/avatar.png" alt="">
                                                @if (currentCustomer != null && currentCustomer.IsRegistered())
                                            {
                                                <div class="username-hide-on-mobile">
                                                    @(currentCustomer.Email)
                                                </div>
                                            }
                                                <span class="fa fa-angle-down"></span>
                                            </a>

                                            <ul class="dropdown-menu dropdown-menu-right dropdown-menu-default">
                                                @if (currentCustomer.IsAdmin())
                                                {
                                                    <li>
                                                        <a href="@Url.Action("Edit", "Customer", new { id = currentCustomer.Id, area = Constants.AreaAdmin })">
                                                            <i class="icon-user"></i> @T("Admin.Header.Profile")
                                                        </a>
                                                    </li>
                                                    <li>
                                                        <a href="@Url.Action("FiscalYearGraph", "FiscalYear", new {area = Constants.AreaAdmin })">
                                                            <i class="icon-settings"></i> @T("Admin.Header.SetFiscalYear")
                                                        </a>
                                                    </li>
                                                }
                                                <li>
                                                    <a href="@Url.Action("Logout", "Customer", new { area = "" }, null)">
                                                        <i class="icon-logout"></i> @T("Admin.Header.Logout")
                                                    </a>
                                                </li>
                                            </ul>
                                        </li>


                                        @await Component.InvokeAsync("CommonLanguageSelector")
                                        @if (canManageMaintenance)
                                    {
                                        <li role="presentation" class="dropdown">
                                            <a href="javascript:;" class="dropdown-toggle info-number" data-toggle="dropdown" aria-expanded="false">
                                                <i class="icon-settings"></i>
                                            </a>
                                            <ul id="menu1" class="dropdown-menu dropdown-menu-right list-unstyled msg_list overflow-h" role="menu">
                                                <li>
                                                    <a href="@Url.Action("ClearCache", "Common", new { memory = true, returnurl = webHelper.GetRawUrl(this.Context.Request) })">
                                                        <i class="icon-refresh"></i>
                                                        @T("Admin.Header.ClearCacheMemory")
                                                    </a>
                                                </li>

                                                <li>
                                                    <a href="@Url.Action("RestartApplication", "Common", new { returnurl = webHelper.GetRawUrl(this.Context.Request) })" id="restart-application">
                                                        <i class="icon-reload"></i>
                                                        @T("Admin.Header.RestartApplication")
                                                    </a>
                                                </li>

                                            </ul>
                                        </li>
                                    }

                                      
                                    </ul>
                                </div>
                                </div>
                        </nav>
                    </div>
                    <div class="clear"></div>
                </div>
                <vc:admin-widget widget-zone="header_navbar_after" additional-data="null" />
            }
            <vc:admin-widget widget-zone="admin_header_before" additional-data="null" />

            <vc:admin-widget widget-zone="admin_header_after" additional-data="null" />

            @if (IsSectionDefined("headermenu"))
            {
                @RenderSection("headermenu")
            }
            else
            {
                <partial name="Menu" />
            }
            <div class="right_col" role="main" style="min-height: 900px!important;">
                <partial name="Notifications" />
                @RenderBody()
            </div>
            <div class="throbber">
                <div class="curtain">
                </div>
                <div class="curtain-content">
                    <div>
                        <h1 class="throbber-header">Wait...</h1>
                        <div class="spinner active">
                            <svg style="width:100px; height:100px" viewBox="0 0 64 64">
                                <circle cx="32" cy="32" r="29" fill="none" stroke-width="3" stroke-miterlimit="10"></circle>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <css-files asp-location="Footer">
        <script-files asp-location="Footer">

            <div class="page-footer">
                <div class="page-footer-inner">
                    <a href="https://LIMS.com/" target="_blank">@DateTime.UtcNow.Year Powered by LIMS ®</a>
                </div>
                <div class="scroll-to-top">
                    <i class="icon-arrow-up"></i>
                </div>
            </div>
            <script>
            $(document).ready(function () {
                $("#restart-application").click(function (e) {
                    event.preventDefault();
                    showThrobber('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Admin.Header.RestartApplication.Progress").Text))');
                    $("html, body").animate({ scrollTop: 0 }, 400);
                    $.get($(this).attr("href"), function (data) { });
                    setTimeout(function () {
                        location.reload();
                    }, 10000);
                });
            });
            </script>
</body>
</html>
<style></style>
<script type="text/javascript">
        $(document).ready(function () {
        var province = $("#country").data("val");
            url = "@Url.Action("GetProvince", "LocalStructure")";
            $.getJSON(url, (result) => {
                $("#country").empty();
                $("#country").append(`<option value="">Select</option>`);
                $.each(result, function (item, value) {
                    var selectedAttr = "";
                    if (province == value)
                        selectedAttr = "selected";
                    $("#country").append(`<option value="${value}" ${selectedAttr}>${value}</option>`);
                });
            });

            if (province) {
                // $(`#country option[value="`+province+`"]`).prop('selected', true);

                var dis = $("#district").data('val');
                $("#district").empty();
                $("#district").append('<option value="">Select</option>')
                url = "@Url.Action("GetDistrict", "LocalStructure")";
                var data = {
                    province: province
                }
                $.getJSON(url, data, (result) => {

                    $.each(result, function (item1, value1) {
                        if (value1 == dis) {
                            $("#district").append(`<option value="${value1}" selected>${value1}</option>`);
                        }
                        else {
                            $("#district").append(`<option value="${value1}">${value1}</option>`);

                        }
                    });
                });
            }
                //  $("#district").val(dis);
            else {
                $("#district").empty();
                $("#district").append('<option value="">select</option>')
                url = "@Url.Action("GetDistrict", "LocalStructure")";
                var data = {
                    province: province
                }
                $.getJSON(url, data, (result) => {

                    $.each(result, function (item1, value1) {

                        $("#district").append(`<option value="${value1}">${value1}</option>`);
                    });
                });
            }
        
            $('#country').change(function () {
                var province = $(this).val();
                $("#district").empty();
                $("#district").append('<option value="">select</option>')
                url = "@Url.Action("GetDistrict", "LocalStructure")";
                var data = {
                    province: province
                }
                $.getJSON(url, data, (result) => {

                    $.each(result, function (item1, value1) {
                        $("#district").append(`<option value="${value1}">${value1}</option>`);
                    });
                });
            });
            var $local = $('#locallevel');
            $('#district').change(function () {
                var district = $(this).val();
                $("#locallevel").empty();
                url = "@Url.Action("GetLocalLevel", "LocalStructure")";
                var data = {
                    district: district
                }
                $.getJSON(url, data, (result) => {
                    $("#locallevel").append('<option value="">select</option>')
                    $.each(result, function (item, value) {
                        $("#locallevel").append(`<option value="${value}">${value}</option>`);
                    });

                })

            });




    });

</script>